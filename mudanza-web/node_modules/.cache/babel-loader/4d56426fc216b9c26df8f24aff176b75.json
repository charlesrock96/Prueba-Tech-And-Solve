{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CharlesRock96\\\\source\\\\repos\\\\mudanza.web\\\\src\\\\Formulario\\\\Formulario.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst Formulario = () => {\n  const baseUrl = \"https://localhost:44330/api/mudanza\";\n  const [datos, setDatos] = useState({\n    cedula: '',\n    archivo: null\n  });\n\n  const handleInputChange = event => {\n    setDatos({ ...datos,\n      cedula: event.target.value\n    });\n  };\n\n  const handleInputChangeFile = event => {\n    setDatos({ ...datos,\n      archivo: event.target.files[0]\n    });\n  };\n\n  const mostrarAlert = (mensaje, tipo) => {\n    swal({\n      title: \"\",\n      text: mensaje === \"\" ? \"Datos procesados correctamente\" : mensaje,\n      icon: tipo ? \"error\" : \"success\",\n      button: \"Aceptar\"\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let formData = new FormData();\n    formData.append('archivo', datos.archivo);\n    formData.append('cedula', datos.cedula);\n    axios.post(baseUrl, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(resp => {\n      console.log(resp.data);\n      mostrarAlert(resp.data.errorMensaje, resp.data.error);\n      peticionGet();\n      let blob = new Blob([resp.data.errorMensaje], {\n        type: \"text/plain\"\n      }); //descargarArchivo(blob, 'lazy_loading_output.txt');\n    });\n  };\n\n  const peticionGet = async () => {\n    await axios.get(baseUrl + '/' + datos.cedula, {\n      responseType: 'arraybuffer'\n    }).then(response => {\n      let blob = new Blob([response.data], {\n        type: 'text/plain'\n      });\n      let link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = 'Report.txt';\n      link.click();\n    }).catch(error => {\n      console.log(error);\n    }); // alert(\"entro\");\n    // await axios({ \n    //     method:'get', \n    //     url: baseUrl + '/' + datos.cedula, \n    //     responseType:'arraybuffer'\n    //    }) \n    //     .then(function(response) { \n    //     let blob = new Blob([response.data], { type: 'text/plain' }) \n    //     let link = document.createElement('a') \n    //     link.href = window.URL.createObjectURL(blob) \n    //     link.download = 'Report.txt' \n    //     link.click() \n    //    }); \n  };\n\n  const descargarArchivo = (contenidoEnBlob, nombreArchivo) => {\n    let reader = new FileReader();\n\n    reader.onload = event => {\n      let save = document.createElement('a');\n      save.href = event.target.result;\n      save.target = '_self';\n      save.download = nombreArchivo || 'archivo.dat';\n      var clicEvent = new MouseEvent('click', {\n        'view': window,\n        'bubbles': true,\n        'cancelable': true\n      });\n      save.dispatchEvent(clicEvent);\n      (window.URL || window.webkitURL).revokeObjectURL(save.href);\n    };\n\n    reader.readAsDataURL(contenidoEnBlob);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Mudanzas\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"C\\xE9dula\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cedula\",\n    name: \"cedula\",\n    placeholder: \"C\\xE9dula\",\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Archivo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"archivo\",\n    name: \"archivo\",\n    placeholder: \"Archivo\",\n    accept: \".txt\",\n    onChange: handleInputChangeFile,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"Submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Procesar\")));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/CharlesRock96/source/repos/mudanza.web/src/Formulario/Formulario.js"],"names":["React","useState","axios","swal","Formulario","baseUrl","datos","setDatos","cedula","archivo","handleInputChange","event","target","value","handleInputChangeFile","files","mostrarAlert","mensaje","tipo","title","text","icon","button","handleSubmit","preventDefault","formData","FormData","append","post","headers","then","resp","console","log","data","errorMensaje","error","peticionGet","blob","Blob","type","get","responseType","response","link","document","createElement","href","window","URL","createObjectURL","download","click","catch","descargarArchivo","contenidoEnBlob","nombreArchivo","reader","FileReader","onload","save","result","clicEvent","MouseEvent","dispatchEvent","webkitURL","revokeObjectURL","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nconst Formulario = () => { \r\n\r\n    const baseUrl=\"https://localhost:44330/api/mudanza\";\r\n\r\n    const [datos, setDatos] = useState({\r\n        cedula : '',\r\n        archivo : null\r\n    })\r\n\r\n    const handleInputChange =(event) => {\r\n        setDatos({\r\n           ...datos,\r\n           cedula : event.target.value\r\n        })\r\n    }\r\n\r\n    const handleInputChangeFile =(event) => {\r\n        setDatos({\r\n           ...datos,\r\n           archivo : event.target.files[0]\r\n        })\r\n    }\r\n\r\n    const mostrarAlert = (mensaje, tipo)=>{\r\n        swal({\r\n            title: \"\",\r\n            text: mensaje === \"\" ? \"Datos procesados correctamente\" : mensaje,\r\n            icon: tipo ? \"error\" : \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('archivo', datos.archivo)\r\n        formData.append('cedula', datos.cedula)    \r\n    \r\n        axios.post(baseUrl, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then(resp => {\r\n            console.log(resp.data);\r\n            mostrarAlert(resp.data.errorMensaje, resp.data.error);\r\n\r\n            peticionGet();\r\n\r\n            let blob = new Blob([resp.data.errorMensaje], {\r\n                type: \"text/plain\"\r\n            });\r\n\r\n            //descargarArchivo(blob, 'lazy_loading_output.txt');\r\n            \r\n        })\r\n    }\r\n\r\n    const peticionGet=async()=>{\r\n         await axios.get(baseUrl + '/' + datos.cedula, { responseType: 'arraybuffer'})\r\n         .then(response=>{\r\n            let blob = new Blob([response.data], { type: 'text/plain' }) \r\n            let link = document.createElement('a') \r\n            link.href = window.URL.createObjectURL(blob) \r\n            link.download = 'Report.txt' \r\n            link.click() \r\n         }).catch(error=>{\r\n           console.log(error);\r\n         })\r\n\r\n        // alert(\"entro\");\r\n        // await axios({ \r\n        //     method:'get', \r\n        //     url: baseUrl + '/' + datos.cedula, \r\n        //     responseType:'arraybuffer'\r\n        //    }) \r\n        //     .then(function(response) { \r\n        //     let blob = new Blob([response.data], { type: 'text/plain' }) \r\n        //     let link = document.createElement('a') \r\n        //     link.href = window.URL.createObjectURL(blob) \r\n        //     link.download = 'Report.txt' \r\n        //     link.click() \r\n     \r\n        //    }); \r\n\r\n      }\r\n\r\n    const descargarArchivo = (contenidoEnBlob, nombreArchivo) => {\r\n        let reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let save = document.createElement('a');\r\n            save.href = event.target.result;\r\n            save.target = '_self';\r\n            save.download = nombreArchivo || 'archivo.dat';\r\n            var clicEvent = new MouseEvent('click', {\r\n                'view': window,\r\n                'bubbles': true,\r\n                'cancelable': true\r\n            });\r\n            save.dispatchEvent(clicEvent);\r\n            (window.URL || window.webkitURL).revokeObjectURL(save.href);\r\n        };\r\n        reader.readAsDataURL(contenidoEnBlob);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">Mudanzas</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Cédula</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"cedula\" \r\n                        name=\"cedula\" \r\n                        placeholder=\"Cédula\"\r\n                        onChange={handleInputChange}\r\n                        required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Archivo</label>\r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"form-control\" \r\n                        id=\"archivo\" \r\n                        name=\"archivo\" \r\n                        placeholder=\"Archivo\" \r\n                        accept=\".txt\"\r\n                        onChange={handleInputChangeFile}\r\n                        required />\r\n                </div>\r\n                <button type=\"Submit\" className=\"btn btn-primary\" >Procesar</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Formulario;"]},"metadata":{},"sourceType":"module"}